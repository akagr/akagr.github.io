<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Akash Agrawal]]></title>
  <link href="http://akashagrawal.me/atom.xml" rel="self"/>
  <link href="http://akashagrawal.me/"/>
  <updated>2014-01-29T15:50:55+05:30</updated>
  <id>http://akashagrawal.me/</id>
  <author>
    <name><![CDATA[Akash  Agrawal]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AngularJs Directives: II]]></title>
    <link href="http://akashagrawal.me/blog/2014/01/29/angularjs-directives-ii/"/>
    <updated>2014-01-29T15:40:27+05:30</updated>
    <id>http://akashagrawal.me/blog/2014/01/29/angularjs-directives-ii</id>
    <content type="html"><![CDATA[<p>Ok lets finish the configuration options in directives. You might want to view my previous post first. We were looking at what all things can be specified for directives and how to use them. We already looked at restrict,  replace, template, templateUrl, priority, terminal and transclude. Now to round up the remaining of rather more complex options:</p>

<p><strong>controller</strong>: Lets you specify the controlling station of your directive. It is here that you should do any manipulations. The controller is defined as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"></pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">directive</span> <span class="s">&#39;myDirective&#39;</span><span class="p">,</span> <span class="p">()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="c1"># other options</span>
</span><span class='line'>  <span class="nv">controller: </span><span class="nf">($scope, $element, $attrs) -&gt;</span>
</span><span class='line'>    <span class="nv">$scope.myvalue = </span><span class="s">&#39;yay!&#39;</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nv">anotherValue = </span><span class="s">&quot;al&#39;right!&quot;</span>
</span><span class='line'>  <span class="c1">#other options</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note that the <code>$scope</code> in the controller here refers to the scope specified as an option (we&rsquo;ll look at that in a bit). Also while setting values on <code>$scope</code> will function just like you think, setting values on <code>this</code> will make them available in other directives if we wish. i.e. we can share stuff between directives. The next option shows how.</p>

<p><strong>require</strong>: Let&rsquo;s you require a controller from other directives. It follows two forms:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"></pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">require: </span><span class="s">&#39;?myDirective&#39;</span> <span class="c1">#looks for the directive on same element and will not raise error if no such directive found</span>
</span><span class='line'><span class="nv">require: </span><span class="s">&#39;^myDirective&#39;</span> <span class="c1">#looks for directive on parent element if not found in same element</span>
</span></code></pre></td></tr></table></div></figure>


<p><a class="jsbin-embed" href="http://jsbin.com/EqUxigiX/1/embed?html,js,output">JS Bin</a></p>

<script src="http://static.jsbin.com/js/embed.js"></script>


<p></p>
]]></content>
  </entry>
  
</feed>
