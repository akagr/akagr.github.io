<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Akash Agrawal]]></title>
  <link href="http://akagr.github.io/atom.xml" rel="self"/>
  <link href="http://akagr.github.io/"/>
  <updated>2013-12-20T15:09:05+05:30</updated>
  <id>http://akagr.github.io/</id>
  <author>
    <name><![CDATA[Akash  Agrawal]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rudimentary Sessions for Vim]]></title>
    <link href="http://akagr.github.io/blog/2013/12/20/rudimentary-sessions-for-vim/"/>
    <updated>2013-12-20T10:26:52+05:30</updated>
    <id>http://akagr.github.io/blog/2013/12/20/rudimentary-sessions-for-vim</id>
    <content type="html"><![CDATA[<p>I have been taking a lot of vim with coffee lately. I really like the raw power of this editor. Up till now I have found replacement commands, mappings and plugins for most of my daily used features. Still, vim does not see projects and there is no automatic sessions support built-in.</p>

<p>The plugins on offer are excellent in their own right but they did not cut it for me. Plus, I really want to get into hacking editor part and it was a nice excuse to try out some of the vimscript I learnt.</p>

<p>I started off a fork of casastorta&rsquo;s plugin of same name and got some autoloading in to avoid performance impact. I have also made the &lsquo;save session on exit default&rsquo;. The plugin once installed will try to save a session automatically in the current directory when you exit vim. Aaaannnnd, <strong>spoiler alert</strong>, it will also load the session when you fire up vim from same directory next time. It should fit right in if you plan to open vim from root of you projects.</p>

<p>Enough talk, lets see some code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">function</span><span class="p">!</span> sessions#create<span class="p">()</span>
</span><span class='line'>   <span class="k">let</span> <span class="nb">path</span> <span class="p">=</span> getcwd<span class="p">()</span>
</span><span class='line'>   <span class="k">if</span> <span class="p">!</span>filewritable<span class="p">(</span><span class="s1">&#39;./.session.vim&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> tolower<span class="p">(</span>input<span class="p">(</span><span class="s2">&quot;No session file in &quot;</span> . <span class="nb">path</span> . <span class="s2">&quot;. Create one? [Y]es/[N]o &quot;</span><span class="p">))</span> <span class="p">=~</span> <span class="s2">&quot;y&quot;</span>
</span><span class='line'>         <span class="k">mksession</span><span class="p">!</span> ./.session.<span class="k">vim</span>
</span><span class='line'>      <span class="k">endif</span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>      <span class="k">if</span> tolower<span class="p">(</span>input<span class="p">(</span><span class="s2">&quot;Session file &quot;</span> . <span class="nb">path</span> . <span class="s2">&quot;/.seesion.vim already exists. Overwrite? [Y]es/[N]o? &quot;</span><span class="p">))</span> <span class="p">=~</span> <span class="s2">&quot;y&quot;</span>
</span><span class='line'>         <span class="k">let</span> <span class="k">s</span>:sessionautoloaded <span class="p">=</span> <span class="m">1</span>
</span><span class='line'>         <span class="k">call</span> sessions#<span class="k">save</span><span class="p">()</span>
</span><span class='line'>      <span class="k">endif</span>
</span><span class='line'>   <span class="k">endif</span>
</span><span class='line'><span class="k">endfunction</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span><span class="p">!</span> sessions#<span class="k">save</span><span class="p">()</span>
</span><span class='line'>   <span class="k">if</span> <span class="k">s</span>:sessionautoloaded <span class="p">==</span> <span class="m">1</span>
</span><span class='line'>      <span class="k">mksession</span><span class="p">!</span> ./.session.<span class="k">vim</span>
</span><span class='line'>      <span class="k">echom</span> <span class="s2">&quot;Session saved.&quot;</span>
</span><span class='line'><span class="c">      &quot;source ./.session.vim</span>
</span><span class='line'>   <span class="k">else</span>
</span><span class='line'>      <span class="k">echom</span> <span class="s2">&quot;No session to save. Please create session with &#39;:mksession .session.vim&#39; first! &quot;</span>
</span><span class='line'>      <span class="k">if</span> tolower<span class="p">(</span>input<span class="p">(</span><span class="s2">&quot;Autocreate session for you? [Y]es/[N]o &quot;</span><span class="p">))</span> <span class="p">=~</span> <span class="s2">&quot;y&quot;</span>
</span><span class='line'>         <span class="k">call</span> sessions#create<span class="p">()</span>
</span><span class='line'>      <span class="k">endif</span>
</span><span class='line'>   <span class="k">endif</span>
</span><span class='line'><span class="k">endfunction</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span><span class="p">!</span> sessions#<span class="k">load</span><span class="p">()</span>
</span><span class='line'><span class="c">   &quot; Rudimentary session management</span>
</span><span class='line'>   <span class="k">if</span> <span class="k">version</span> <span class="p">&gt;=</span> <span class="m">700</span>
</span><span class='line'>      <span class="k">set</span> <span class="nb">sessionoptions</span><span class="p">=</span>blank<span class="p">,</span><span class="k">buffers</span><span class="p">,</span>sesdir<span class="p">,</span>tabpages<span class="p">,</span><span class="k">winpos</span><span class="p">,</span>folds<span class="p">,</span><span class="k">options</span><span class="p">,</span>unix<span class="p">,</span>slash
</span><span class='line'>   <span class="k">endif</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">if</span> <span class="p">!</span>exists<span class="p">(</span><span class="s2">&quot;s:sessionautoloaded&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">let</span> <span class="k">s</span>:sessionautoloaded <span class="p">=</span> <span class="m">0</span>
</span><span class='line'>   <span class="k">endif</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">if</span> filereadable<span class="p">(</span><span class="s1">&#39;./.session.vim&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="k">s</span>:sessionautoloaded <span class="p">==</span> <span class="m">0</span>
</span><span class='line'>         source ./.session.<span class="k">vim</span>
</span><span class='line'>         <span class="k">let</span> <span class="k">s</span>:sessionautoloaded <span class="p">=</span> <span class="m">1</span>
</span><span class='line'>         <span class="k">echom</span> <span class="s2">&quot;Session loaded.&quot;</span>
</span><span class='line'>      <span class="k">endif</span>
</span><span class='line'>   <span class="k">endif</span>
</span><span class='line'><span class="k">endfunction</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you have any interest in scripting vim, above is a fairly easy noob code. The snippet from my base plugin is as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">if</span> exists<span class="p">(</span><span class="s1">&#39;b:loaded_rudimentary_sessions_ftplugin&#39;</span><span class="p">)</span>
</span><span class='line'>   <span class="k">finish</span>
</span><span class='line'><span class="k">endif</span>
</span><span class='line'><span class="k">let</span> <span class="k">b</span>:loaded_rudimentary_sessions_ftplugin <span class="p">=</span> <span class="m">1</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Session is saved with &lt;leader&gt;ss (&lt;leader&gt; is \ by default)</span>
</span><span class='line'>nmap <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> <span class="p">&lt;</span>leader<span class="p">&gt;</span><span class="nb">ss</span> :<span class="k">call</span> sessions#<span class="k">save</span><span class="p">()&lt;</span>CR<span class="p">&gt;</span>
</span><span class='line'>nmap <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> <span class="p">&lt;</span>leader<span class="p">&gt;</span><span class="nb">sc</span> :<span class="k">call</span> sessions#create<span class="p">()&lt;</span>CR<span class="p">&gt;</span>
</span><span class='line'>nmap <span class="p">&lt;</span><span class="k">silent</span><span class="p">&gt;</span> <span class="p">&lt;</span>leader<span class="p">&gt;</span><span class="k">sl</span> :<span class="k">call</span> sessions#<span class="k">load</span><span class="p">()&lt;</span>CR<span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'>augroup RudimentarySession
</span><span class='line'>  autocmd <span class="nb">VimEnter</span> * <span class="k">call</span> sessions#<span class="k">load</span><span class="p">()</span>
</span><span class='line'>  autocmd <span class="nb">VimLeave</span> * <span class="k">call</span> sessions#<span class="k">save</span><span class="p">()</span>
</span><span class='line'>augroup END
</span></code></pre></td></tr></table></div></figure>


<p>Before you think of installing this plugin, you might want to know a few issues that I noticed. First, if a session file exists in the directory, vim will always load it. Always. Even if you specify a file explicitly while opening vim. The file will be opened, sure, but in a hidden buffer. You will have to navigate to that file on your own.</p>

<p>Second, it might get a little confusing when every directory can potentially house a vim session file. It will get unpredictable what you will see on entering vim from a particular directory. It will be good to have some sort of organization to these session files.</p>

<p>If you want to give it a go, use your favorite vim bundle manager to install it from <a href="https://github.com/akagr/vim-rudimentary-sessions">my git repo here</a>.</p>

<p>If you have any suggestions or issues, take it to the github issue tracker. It ain&rsquo;t there for nothing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Vimrc]]></title>
    <link href="http://akagr.github.io/blog/2013/12/17/my-vimrc/"/>
    <updated>2013-12-17T12:46:00+05:30</updated>
    <id>http://akagr.github.io/blog/2013/12/17/my-vimrc</id>
    <content type="html"><![CDATA[<p>I love using sublime text. But there is something about vim that just keeps me pulling back. It&rsquo;s not my default editor of choice (yet) but I still enjoy writing stuff with it when I am not working. This blog is a fine example. Following is my vim config file. Some settings are there thanks to authors of some excellent blogs. Others, I have written myself out of my own needs. One thing&rsquo;s for sure, when it comes to customizability, vim is the grand-daddy of them all.</p>

<div><script src='https://gist.github.com/8001153.js'></script>
<noscript><pre><code>set nocompatible

&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot; vundle config
&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot; Vundles
&quot; git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
&quot; add this to bashrc or bash_profile: export TERM=&quot;xterm-256color&quot;
&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
Bundle &#39;gmarik/vundle&#39;

Bundle &#39;altercation/vim-colors-solarized&#39;
Bundle &#39;Raimondi/delimitMate&#39;

&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot; General
&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
set nobackup nowritebackup noswapfile
filetype plugin indent on

&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot; Interface
&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot; Syntax Highlighting
set background=dark
colorscheme solarized
syntax enable

set wildmenu wildmode=longest:full,full
set ruler
set number

&quot; Indentation
set expandtab tabstop=2 shiftwidth=2 
set smartindent autoindent copyindent

&quot; Search
set ignorecase smartcase
set hlsearch incsearch showmatch

set magic

&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
&quot; Key Bindings
&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
let mapleader = &quot;,&quot;
let g:mapleader = &quot;,&quot;
nmap &lt;leader&gt;w :w!&lt;cr&gt;
nmap &lt;leader&gt;q :q&lt;cr&gt;
map j gj
map k gk
map &lt;space&gt; /
map &lt;c-space&gt; ?
map &lt;silent&gt; &lt;leader&gt;, :noh&lt;cr&gt;
</code></pre></noscript></div>


<p>I know I really need some plug-ins. This file, like everybody else&rsquo;s, is a work in progress. Feel free to rip it off if you are starting out with vim. You can thank me by suggesting some great plug-ins or hacks which you dig in the comments below.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finally gonna date node.js]]></title>
    <link href="http://akagr.github.io/blog/2013/12/13/finally-gonna-date-node-dot-js/"/>
    <updated>2013-12-13T17:51:17+05:30</updated>
    <id>http://akagr.github.io/blog/2013/12/13/finally-gonna-date-node-dot-js</id>
    <content type="html"><![CDATA[<p>When I first heard of node.js, I was in graduation just getting into rails. But I seriously took notice when it displaced rails as the most popular repo on github. Speed whore as I am, I found event-driven non-blocking I/O particularly seducing.</p>

<p>I knew some elementary javascript and even at my work-ex of 7 months, never really used pure js. So I guessed, that just like ruby, I will definitely need to learn javascript a little. The world will be written in javascript in near future. Might as well start speaking it now.</p>

<p>That said, my javascript is still quite rusty. But at least I now understand how to utilize functions as closures and decided to return to node. Being a web-dev, obviously I can&rsquo;t be playing with vanilla quite long. After saying hello to a couple of worlds and writing my own servers with some routes thrown in for taste, meteor caught my eye.</p>

<p>About the only downside I can think of it is is that it does not have eyes for anything other than MongoDb. So I can&rsquo;t just start writing code for my projects.</p>

<p>A nodejs project should be coming my way in sometime. I am hopeful of that. I will be spending as much time as I can manage with node till then. Should be an interesting journey.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Riak: Installation on Ubuntu 12.04]]></title>
    <link href="http://akagr.github.io/blog/2013/12/11/riak-installation-on-ubuntu-12-dot-04/"/>
    <updated>2013-12-11T17:47:38+05:30</updated>
    <id>http://akagr.github.io/blog/2013/12/11/riak-installation-on-ubuntu-12-dot-04</id>
    <content type="html"><![CDATA[<p>Riak is a relatively new kid on the block of NoSQL territory. It is based on principles of high availability, fault-tolerance, automatic replication and load balancing. Sounds like a deal for your next project&hellip; right? I got interested in one of my co-worker&rsquo;s project which is based on riak and decided to take it for a spin. Here is my first account with riak where I installed it on my Ubuntu 12.04 precise.</p>

<p>First I needed to get all the prerequisites right. This involves some packages and erlang. Now I already got error with erlang OTP R14 so I decided to go with the latest R16 (B02 to be exact).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install git build-essential libncurses5-dev openssl <span class="se">\</span>
</span><span class='line'>libssl-dev libssl0.9.8 libc6-dev libc6-dev
</span></code></pre></td></tr></table></div></figure>


<p>Now download the latest erlang release from <a href="https://www.erlang-solutions.com/downloads/download-erlang-otp">here</a> and set it up as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo dpkg -i &lt;your_downloaded_file.deb&gt;
</span></code></pre></td></tr></table></div></figure>


<p>If that goes suuccessfully and without a fuss, chances are that you will have a fully functioning riak installation in a jiffy.
Next steps are fairly simple.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://github.com/basho/riak.git
</span><span class='line'><span class="nb">cd </span>riak
</span><span class='line'>make devrel
</span></code></pre></td></tr></table></div></figure>


<p>Successful completion of the above indicates you&rsquo;re good. Just in case, let&rsquo;s check our installation.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>dev
</span><span class='line'>dev1/bin/riak start
</span><span class='line'>dev1/bin/riak ping
</span></code></pre></td></tr></table></div></figure>


<p>If the output goes pong, you are all set to get your explorer cap on.</p>

<p>In my case, there were lots of head-scratching due to incompatibilities between erlang, riak sources yada yada. Hopefully the process goes smoothly for you. Hoot off below if you are having problems</p>
]]></content>
  </entry>
  
</feed>
